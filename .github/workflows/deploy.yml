name: Deploy Rasa
on:
  push:
    tags:
      - 'rasa-*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws --version

    - name: Install Docker ECS Integration CLI
      run: curl -L https://raw.githubusercontent.com/docker/aci-integration-beta/main/scripts/install_linux.sh | sh

    - name: Docker Compose Build and Push
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      # We use docker-compose here as opposed to docker compose because we want the non-ECS enabled version
      run: |
        docker context use default
        docker-compose -f docker/docker-compose-ecs.yml build
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker-compose -f docker/docker-compose-ecs.yml push

    - name: Docker Compose Up
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_DEFAULT_REGION: us-east-1
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        BUCKET_NAME: bspk-rasa
        RASA_USER_APP: http://actions:5055
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
       # We use docker compose here as opposed to docker-compose because we want the ECS enabled version
      run: |
        aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
        aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
        aws configure set default.region "us-east-1"
        docker context create ecs ecs --key-id $AWS_ACCESS_KEY_ID --profile ecs --region us-east-1 --secret-key $AWS_SECRET_ACCESS_KEY
        docker context use ecs
        docker compose -f docker/docker-compose-ecs.yml up

    - name: Run End-To-End Test Workflow
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        event-type: deploy-rasa